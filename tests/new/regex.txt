"\["                     return(LBRACK)
"\]"                     return(RBRACK)
"\+"                     return(PLUS)
"\-"                     return(MINUS)
"\*"                     return(TIMES)
"n"                      return(NEWLINE_CHAR)
"r"                      return(CRETURN_CHAR)
"t"                      return(TABULATE_CHAR)
"\?"                     return(QUESTION)
"\|"                     return(BAR)
"\\"                     return(SLASH)
"^"                      return(CAP)
"\("                     return(LPAREN)
"\)"                     return(RPAREN)
"{"                      return(LBRACE)
"}"                      return(RBRACE)
"[ !#-&\(-\[\]-}]"       return(CHAR)
"\."                     return(DOT)
"0"                      return(ZERO)

%%
%nodecollapse

%start re

re   => [ exp { BAR exp } ] ;

exp  => msub 
     | msub exp
     ;

msub => sub 
     | sub QUESTION
     | sub PLUS
     | sub TIMES
     ;

sub  => elm
     | LBRACK slc RBRACK
     | LPAREN re RPAREN
     ;

elm  => fch
     | CAP
     | MINUS
     | DOT
     ;

esc  => SLASH QUESTION
     | SLASH LBRACK
     | SLASH RBRACK
     | SLASH PLUS
     | SLASH MINUS
     | SLASH TIMES
     | SLASH BAR
     | SLASH SLASH
     | SLASH CAP
     | SLASH LPAREN
     | SLASH RPAREN
     | SLASH DOT
     | SLASH NEWLINE_CHAR
     | SLASH CRETURN_CHAR
     | SLASH TABULATE_CHAR
     | SLASH ZERO
     ;

slc => [ CAP ] sli { sli } ;

sli => fch 
     | fch MINUS fch
     | DOT
     ;

fch => CHAR
     | TABULATE_CHAR
     | NEWLINE_CHAR
     | CRETURN_CHAR
     | ZERO
     | esc
     ;